source('~/GitHub/Machine Learning A-Z/Part 1 - Data Preprocessing/Data_Preprocessing/data_preprocessing_template.R')
setwd("Data_Preprocessing/")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age), mean(dataset$Age, na.rm = TRUE), dataset$Age)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary), mean(dataset$Salary, na.rm = TRUE), dataset$Salary)
View(dataset)
dataset
str(dataset)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
lavels = c(1,2,3))
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
levels = c(1,2,3))
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataset
dataset = read.csv('Data.csv')
setwd("Data_Preprocessing/")
dataset = read.csv('Data.csv')
dataset
str(dataset)
as.numeric(dataset$Country)
dataset$Country = as.numeric(dataset$Country)
dataset
# Data Preprocessing Template
setwd("Data_Preprocessing/")
# Importing the dataset
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
mean(dataset$Age, na.rm = TRUE),
dataset$Age)
# COURSE IMPLEMENTATION. WHY make a function???
# dataset$Age = ifelse(is.na(dataset$Age),
#                      ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
#                      dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
mean(dataset$Salary,
na.rm = TRUE), dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
aset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
library(caTools)
R.version
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
split_ref = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split_ref)
test_set = subset(dataset, !split_ref)
View(training_set)
View(training_set)
View(test_set)
training_set = scale(training_set)
test_set = scale(test_set)
training_set
str(training_set)
training_set[2:3] = scale(training_set[2:3])
test_set[2:3] = scale(test_set[2:3])
str(training_set)
training_set
setwd(dir = '../Part 2 - Regression/Section 4 - Simple Linear Regression/')
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
?lm
salary_pred_model = lm(Salary ~ YearsExperience,
training_set)
summary(salary_pred_model)
y_pred = predict(object = salary_pred_model, training_set)
y_pred
y_pred = predict(object = salary_pred_model, test_set$YearsExperience)
y_pred = predict(object = salary_pred_model, newdata = test_set)
y_pred
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point() +
geom_line(salary_pred_model)
library(ggplot2)
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point() +
geom_line(salary_pred_model)
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point()
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point() +
geom_line(data = y_pred)
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point() +
geom_line(data = aes(YearsExperience, y_pred))
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point() +
geom_line(data = aes(training_set$YearsExperience, y_pred))
ggplot(training_set, aes(YearsExperience, Salary)) +
geom_point() +
geom_line(data = aes(y_pred))
ggplot() +
geom_point(aes(training_set$YearsExperience, training_set$Salary)) +
geom_line(aes(y_pred$YearsExperience, y_pred)) +
xlab("Years Experience")
ggplot() +
geom_point(aes(training_set$YearsExperience, training_set$Salary)) +
geom_line(aes(training_set$YearsExperience, y_pred)) +
xlab("Years Experience")
y_pred = predict(object = salary_pred_model, newdata = test_set)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, x = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, x = y_pred)) +
xlab("Years Experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, x = training_set$Salary),
color = 'red')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = y_pred)) +
xlab("Years Experience") +
ylab("Salary")
length(y_pred)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(salary_pred_model, training_set))) +
xlab("Years Experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(salary_pred_model, training_set)),
color = 'blue') +
labs(main = "Salary vs Experience (Training Set)")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(salary_pred_model, training_set)),
color = 'blue') +
labs(main = "Salary vs Experience (Training Set)") +
xlab("Years Experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(salary_pred_model, training_set)),
color = 'blue') +
ggtitle("Salary vs Experience (Training Set)") +
xlab("Years Experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
color = 'red') +
geom_line(aes(x = test_set$YearsExperience, y = y_pred),
color = 'blue') +
ggtitle("Salary vs Experience (Test Set)") +
xlab("Years Experience") +
ylab("Salary")
?lm
?geom_line
?aes
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(salary_pred_model, training_set)),
color = 'blue', se = TRUE) +
ggtitle("Salary vs Experience (Training Set)") +
xlab("Years Experience") +
ylab("Salary")
salary_pred_model = lm(Salary ~ YearsExperience,
training_set, se = TRUE)
